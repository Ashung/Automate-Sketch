@import "../Libraries/Preferences.cocoascript";
@import "../Libraries/Google_Analytics.cocoascript";

var onRun = function(context) {

    ga(context, "Type");

    var doc = context.document;

    var fontUsedInDocument = NSMutableArray.alloc().init();

    iterateDocument(doc, function(layer) {
        if (layer.class() == "MSTextLayer") {
            var fontsUsedInTextLayer = layer.attributedString().fontNames().allObjects();
            var loopFonts = fontsUsedInTextLayer.objectEnumerator();
            var font;
            while (font = loopFonts.nextObject()) {
                if (!fontUsedInDocument.containsObject(font)) {
                    fontUsedInDocument.addObject(font);
                }
            }
        }
    });

    if (fontUsedInDocument.count() > 0) {

        // Dialog
        var alert = COSAlertWindow.new();
        alert.setMessageText("Replace Fonts.");
        alert.setInformativeText("Tips: You can find the PostScript name of the font from \"Font Book\" app.")

        alert.addTextLabelWithValue("Choose a font used in current document:");

        var selectBox = NSComboBox.alloc().initWithFrame(NSMakeRect(0, 0, 300, 28));
        selectBox.addItemsWithObjectValues(fontUsedInDocument);
        selectBox.selectItemAtIndex(0);
        alert.addAccessoryView(selectBox);

        alert.addTextLabelWithValue("Replace with:");

        var textField = NSTextField.alloc().initWithFrame(NSMakeRect(0, 0, 300, 24));
        textField.setStringValue(getPreferences(context, "replaceFont") || "");
        textField.setPlaceholderString("Type the PostScript name of the font.");
        alert.addAccessoryView(textField);

        alert.addButtonWithTitle("OK");
        alert.addButtonWithTitle("Cancel");

        var responseCode = alert.runModal();
        if (responseCode == 1000) {

            var selectedFont = fontUsedInDocument.objectAtIndex(selectBox.indexOfSelectedItem());
            var replaceFont = textField.stringValue();

            // Font no specified.
            if (replaceFont == "") {
                showAlert("Font Not Specified.", "Pleace input the PostScript of font you want to replace with.");
                return;
            }

            // Font not found.
            var allSystemFonts = NSFontManager.sharedFontManager().availableFonts();
            if (allSystemFonts.indexOfObject(replaceFont) == 9.223372036854776e+18) {
                showAlert("Font Not Found.", "The font \"" + replaceFont + "\" can't found in system installed fonts.");
                return;
            }

            iterateDocument(doc, function(layer) {
                if (layer.class() == "MSTextLayer") {
                    var fontsUsedInTextLayer = layer.attributedString().fontNames().allObjects();
                    if (fontsUsedInTextLayer.containsObject(selectedFont)) {
                        layer.setFontPostscriptName(replaceFont);
                    }
                }
            });

            setPreferences(context, "replaceFont", replaceFont);

            doc.showMessage('Complete replace of "' + selectedFont + '" with ' + '"' + replaceFont + '".');

        }
    } else {
        doc.showMessage("This document has no text layers.");
    }
};

function iterateDocument(doc, func) {
    var pages = doc.pages();
    var loopPages = pages.objectEnumerator();
    var page;
    while (page = loopPages.nextObject()) {
        var children = page.children();
        var loopChildren = children.objectEnumerator();
        var layer;
        while (layer = loopChildren.nextObject()) {
            func(layer);
        }
    }
}

function showAlert(title, message) {
    var app = NSApplication.sharedApplication();
    app.displayDialog_withTitle(message, title);
}
