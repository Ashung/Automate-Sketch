@import "../Libraries/Google_Analytics.cocoascript";

var onRun = function(context) {

    ga(context, "Artboard");

    var doc = context.document;
    var documentData = doc.documentData();

    if (documentData.allArtboards().count() == 0) {
        doc.showMessage("No artboards in current document.");
        return;
    }

    var types = ["Artboard", "Symbol Master", "Artboard & Symbol Master"];
    var scales = [1, 0.5, 1.5, 2, 2.5, 3, 4];
    var formats = ["png", "svg"];
    var scaleStrings = scales.map(function(scale) {
        return scale + "x";
    });

    // Dialog
    var dialog = COSAlertWindow.alloc().init();
    dialog.setMessageText("Export All Artboards");
    dialog.setInformativeText("Export all artboards, symbol masters or both.");
    dialog.addButtonWithTitle("OK");
    dialog.addButtonWithTitle("Cancel");

    dialog.addTextLabelWithValue("Export:");
    var selectBoxTypes = NSPopUpButton.alloc().initWithFrame(NSMakeRect(0, 0, 200, 25));
    selectBoxTypes.addItemsWithTitles(types);
    dialog.addAccessoryView(selectBoxTypes);

    var view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, 300, 50));

    var labelView1 = NSTextField.alloc().initWithFrame(NSMakeRect(0, 25, 100, 25));
    labelView1.setDrawsBackground("NO");
    labelView1.setEditable("NO");
    labelView1.setBezeled("NO");
    labelView1.setStringValue("Format:");
    view.addSubview(labelView1);

    var selectBoxFormats = NSPopUpButton.alloc().initWithFrame(NSMakeRect(0, 0, 100, 25));
    selectBoxFormats.addItemsWithTitles(formats);
    view.addSubview(selectBoxFormats);

    var labelView2 = NSTextField.alloc().initWithFrame(NSMakeRect(110, 25, 100, 25));
    labelView2.setDrawsBackground("NO");
    labelView2.setEditable("NO");
    labelView2.setBezeled("NO");
    labelView2.setStringValue("Scale:");
    view.addSubview(labelView2);

    var selectBoxScales = NSPopUpButton.alloc().initWithFrame(NSMakeRect(110, 0, 100, 25));
    selectBoxScales.addItemsWithTitles(scaleStrings);
    view.addSubview(selectBoxScales);

    dialog.addAccessoryView(view);

    var checkboxBackground = NSButton.alloc().initWithFrame(NSMakeRect(0, 0, 300, 40));
    checkboxBackground.setButtonType(NSSwitchButton);
    checkboxBackground.setTitle("Include background color of artboard.");
    checkboxBackground.setState(NSOffState);
    dialog.addAccessoryView(checkboxBackground);

    var responseCode = dialog.runModal();
    if (responseCode == 1000) {

        var panelMessage = "";
        switch (selectBoxTypes.indexOfSelectedItem()) {
            case 0:
                panelMessage = "Export All Artboards To ...";
                break;
            case 1:
                panelMessage = "Export All Symbol Masters To ...";
                break;
            case 2:
                panelMessage = "Export All Artboards And Symbol Masters To ...";
                break;
            default:
                panelMessage = "Export All Artboards To ...";
        }

        var savePanel = NSOpenPanel.openPanel();
        savePanel.setMessage(panelMessage);
        savePanel.setCanChooseDirectories(true);
        savePanel.setCanChooseFiles(false);
        savePanel.setCanCreateDirectories(true);

        if (savePanel.runModal() == NSOKButton) {

            var scale = scales[selectBoxScales.indexOfSelectedItem()];
            var format = selectBoxFormats.titleOfSelectedItem();

            var exportLayers = documentData.allArtboards();
            var typeIndex = selectBoxTypes.indexOfSelectedItem();
            if (typeIndex == 0) {
                exportLayers = exportLayers.mutableCopy();
                exportLayers.removeObjectsInArray(documentData.localSymbols());
            }
            if (typeIndex == 1) {
                exportLayers = documentData.localSymbols();
            }

            var loopExportLayers = exportLayers.objectEnumerator();
            var layer;
            while (layer = loopExportLayers.nextObject()) {

                var exportFormat = MSExportFormat.alloc().init();
                var exportRequest = MSExportRequest.exportRequestFromExportFormat_layer_inRect_useIDForName(
                    exportFormat, layer, layer.frame().rect(), false
                );
                exportRequest.setShouldTrim(false);
                exportRequest.setFormat(format);
                exportRequest.setScale(scale);

                if (checkboxBackground.state() == 1) {
                    exportRequest.setIncludeArtboardBackground(true);
                }

                var layerName = layer.name()
                    .replace(/\s*\/\s*/g, "\/")
                    .replace(/^(\/)/, "")
                    .replace(/\/$/, "")
                    .replace(/\/\./g, "\/")
                    .replace(/(\/){2,}/g, "\/")
                    .trim();

                doc.saveExportRequest_toFile(
                    exportRequest,
                    savePanel.URL().path() + "/" + layerName + "." + format
                );

            }

            NSWorkspace.sharedWorkspace().openFile_withApplication(savePanel.URL().path(), "Finder");

        }
    }

};
